{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Section/Section.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","incrementCounters","className","styles","listBtn","Object","keys","map","counter","btn","onClick","Notification","message","text","defaultProps","Section","title","children","section","Statistics","good","neutral","bad","total","positivePercentage","listFeedbackn","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,QAAU,iCAAiC,IAAM,+B,mCCAnED,EAAOC,QAAU,CAAC,KAAO,6B,gBCAzBD,EAAOC,QAAU,CAAC,cAAgB,oC,qICmBnBC,EAhBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,kBAAH,OACtB,oBAAIC,UAAWC,IAAOC,QAAtB,SACGC,OAAOC,KAAKL,GAAmBM,KAAI,SAACC,GAAD,OAClC,6BACE,wBAAQN,UAAWC,IAAOM,IAAKC,QAAS,kBAAMT,EAAkBO,MAAhE,SACGA,KAFIA,S,gBCHTG,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,mBAAGV,UAAWC,IAAOU,KAArB,SAA4BD,KAElED,EAAaG,aAAe,CAC1BF,QAAS,UAOID,Q,gBCVTI,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASf,UAAWC,IAAOe,QAA3B,UACE,oBAAIhB,UAAWC,IAAOa,MAAtB,SAA8BA,IAC7BC,MAILF,EAAQD,aAAe,CACrBE,MAAO,GACPC,SAAU,IAMGF,Q,gBCIAI,EApBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qBAAItB,UAAWC,IAAOsB,cAAtB,UACE,wCACQ,+BAAOL,OAEf,2CACW,+BAAOC,OAElB,uCACO,+BAAOC,OAEd,yCACS,+BAAOC,OAEhB,qDACqB,iCAAOC,EAAP,cCwCVE,MAnDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOP,EAAP,KAAaQ,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAON,EAAP,KAAgBQ,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOL,EAAP,KAAYQ,EAAZ,KAEM7B,EAAoB,CACxBmB,KAAM,WACJQ,GAAQ,SAAAR,GAAI,OAAIA,EAAO,MAEzBC,QAAS,WACPQ,GAAW,SAAAR,GAAO,OAAIA,EAAU,MAElCC,IAAK,WACHQ,GAAO,SAAAR,GAAG,OAAIA,EAAM,OAIlBS,EAAqB,WACzB,OAAOX,EAAOC,EAAUC,GAS1B,OACE,sBAAKpB,UAAU,MAAf,UACE,cAAC,EAAD,CAASc,MAAM,wBAAf,SACE,cAAC,EAAD,CACEf,kBAAmBA,MAGvB,cAAC,EAAD,CAASe,MAAM,aAAf,SACGe,IAAuB,EACtB,cAAC,EAAD,CACEX,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOQ,IACPP,mBAnBDQ,KAAKC,MACF,IAAPb,EAAeW,OAqBZ,cAAC,EAAD,CAAcnB,QAAQ,4BC9ChCsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0d26d1dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listBtn\":\"FeedbackOptions_listBtn__1ajUk\",\"btn\":\"FeedbackOptions_btn__25ltg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__2Hj0j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listFeedbackn\":\"Statistics_listFeedbackn__1e4Lu\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ incrementCounters }) => (\r\n  <ul className={styles.listBtn}>\r\n    {Object.keys(incrementCounters).map((counter) => (\r\n      <li key={counter}>\r\n        <button className={styles.btn} onClick={() => incrementCounters[counter]()}>\r\n          {counter}\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  incrementCounters: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Notification.module.css\";\r\n\r\nconst Notification = ({ message }) => <p className={styles.text}>{message}</p>;\r\n\r\nNotification.defaultProps = {\r\n  message: \"Oops:(\",\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.section}>\r\n    <h1 className={styles.title}>{title}</h1>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.defaultProps = {\r\n  title: \"\",\r\n  children: [],\r\n};\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styles from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <ul className={styles.listFeedbackn}>\r\n    <li>\r\n      Good: <span>{good}</span>\r\n    </li>\r\n    <li>\r\n      Neutral: <span>{neutral}</span>\r\n    </li>\r\n    <li>\r\n      Bad: <span>{bad}</span>\r\n    </li>\r\n    <li>\r\n      Total: <span>{total}</span>\r\n    </li>\r\n    <li>\r\n      Positive feedback: <span>{positivePercentage}%</span>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nexport default Statistics;\r\n","import React, { useState  } from \"react\";\r\n\r\nimport FeedbackOptions from \"./components/FeedbackOptions\";\r\nimport Notification from \"./components/Notification\";\r\nimport Section from \"./components/Section\";\r\nimport Statistics from \"./components/Statistics\";\r\n\r\nfunction App  () {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const incrementCounters = {\r\n    good: () => {\r\n      setGood(good => good + 1);\r\n    },\r\n    neutral: () => {\r\n      setNeutral(neutral => neutral + 1);\r\n    },\r\n    bad: () => {\r\n      setBad(bad => bad + 1);\r\n    },\r\n  };\r\n\r\n  const countTotalFeedback = () => {\r\n    return good + neutral + bad;\r\n  }\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    return Math.round(\r\n      (good * 100) / (countTotalFeedback())\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          incrementCounters={incrementCounters}\r\n        />\r\n      </Section>\r\n      <Section title=\"Statistics\">\r\n        {countTotalFeedback() > 0 ? (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={countTotalFeedback()}\r\n            positivePercentage={countPositiveFeedbackPercentage()}\r\n          />\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}